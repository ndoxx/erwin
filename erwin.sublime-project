{
	"folders":
	[
		{
			"path": "source"
		}
	],

	"build_systems":
    [
    	{
    		"name": "make build",
    		"shell_cmd": "cd ${project_path}/build && make editor -j4",
    		"file_regex": "/([^/:]+):(\\d+):(\\d+): ",
            "target": "ansi_color_build",
            "syntax": "Packages/ANSIescape/ANSI.sublime-syntax",
    		"variants": [
    			{
    				"name": "make build & run",
    				"shell_cmd": "cd ${project_path}/build && make editor -j4 && ../bin/editor"
    			},
    			{
    				"name": "cmake build",
    				"shell_cmd": "cd ${project_path}/build && cmake -DSIMPLE_ANSI=ON .. && make editor -j4"
    			},
    			{
    				"name": "clean",
    				"shell_cmd": "rm -rf ${project_path}/build && mkdir ${project_path}/build"
    			}
    		]
    	}
    ],

	"settings":
	{
		// NOTE(ndx): finding information on EasyClangComplete configuration was tedious to say the least.
		// https://pbs.twimg.com/media/EVBj7AQXgAAMk0i?format=jpg&name=small
		// I used this page as a source:
		// https://niosus.github.io/EasyClangComplete/settings
		// Takeaways:
		// - All ECC settings should be put in the "settings" field of this config file
		// - All listed flags should be prefixed by "ecc_"
		// - Use ${project_path} to refer to the project top folder, nothing else
		// - If ECC complains about a non existing header, force-feed it the path with the help of a -I command as done below
		//   Hint: match the target_include_directories() directives in the relevant CMakeLists.txt
		// - If ECC complains about the syntax and does not find certain std symbols, set the ecc_lang_flags field
		"ecc_common_flags" : [
		    "-I/usr/include",
		    "-I${project_path}/source",
		    "-I${project_path}/source/Erwin",
		    "-I${project_path}/source/vendor",
			"-I${project_path}/source/vendor/glm",
			"-I${project_path}/source/vendor/imgui",
			"-I${project_path}/source/vendor/imgui_filedialog",
			"-I${project_path}/source/vendor/taskflow",
			"-I${project_path}/source/vendor/glad/include",
			"-I${project_path}/source/vendor/ctti/include",
			"-I${project_path}/source/vendor/freetype/include",
			"-I${project_path}/source/vendor/entt/src",
		    "-I${project_path}/source/Applications/Editor/source",
			"-I${project_path}/source/vendor/Catch2/single_include",
		    // this is needed to include the correct headers for clang
		    "-I/usr/lib/clang/$clang_version/include",
		],
		"ecc_lang_flags": {
			"CPP": ["-std=c++17"],
		},
		// For clang-tidy linter to work, we must provide a path to the compile_commands.json
		// file generated by cmake
		"SublimeLinter.linters.clangtidy.compile_commands": "${project_path}/build",
		// ClangFormat plugin settings
		"ClangFormat": {
			"format_on_save": false
		}
	}
}
